version: '3.8'

# Configuration simplifiée pour Umbrel
# Variables d'environnement directement dans le fichier

x-shared-api-worker-env: &shared-api-worker-env
  # Base de données
  DB_USERNAME: postgres
  DB_PASSWORD: difyai123456
  DB_HOST: db
  DB_PORT: 5432
  DB_DATABASE: dify
  
  # Redis
  REDIS_HOST: redis
  REDIS_PORT: 6379
  REDIS_PASSWORD: difyai123456
  REDIS_DB: 0
  
  # Celery
  CELERY_BROKER_URL: redis://:difyai123456@redis:6379/1
  
  # Sécurité - CHANGEZ CES CLÉS EN PRODUCTION
  SECRET_KEY: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
  
  # Stockage
  STORAGE_TYPE: local
  STORAGE_LOCAL_PATH: storage
  
  # Vector Database (utilise PostgreSQL par défaut)
  VECTOR_STORE: pgvector
  PGVECTOR_HOST: pgvector
  PGVECTOR_PORT: 5432
  PGVECTOR_USER: postgres
  PGVECTOR_PASSWORD: difyai123456
  PGVECTOR_DATABASE: dify
  
  # Configuration par défaut
  LOG_LEVEL: INFO
  DEBUG: false
  FLASK_DEBUG: false
  SQLALCHEMY_ECHO: false
  
  # API
  APP_WEB_URL: http://localhost
  CONSOLE_WEB_URL: http://localhost
  API_URL: http://localhost/api
  
  # Upload
  UPLOAD_FILE_SIZE_LIMIT: 15
  UPLOAD_FILE_BATCH_LIMIT: 5
  UPLOAD_IMAGE_FILE_SIZE_LIMIT: 10
  
  # Mail (optionnel - configurez selon vos besoins)
  MAIL_TYPE: ''
  MAIL_DEFAULT_SEND_FROM: ''
  SMTP_SERVER: ''
  SMTP_PORT: 587
  SMTP_USERNAME: ''
  SMTP_PASSWORD: ''
  SMTP_USE_TLS: true
  
  # Sandbox
  CODE_EXECUTION_ENDPOINT: http://sandbox:8194
  CODE_EXECUTION_API_KEY: dify-sandbox
  
  # Plugin
  PLUGIN_DAEMON_ENDPOINT: http://plugin_daemon:5002
  PLUGIN_DAEMON_KEY: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi

services:
  # Service API Dify
  api:
    image: langgenius/dify-api:1.7.1
    restart: unless-stopped
    environment:
      <<: *shared-api-worker-env
      MODE: api
      SENTRY_DSN: ''
      SENTRY_TRACES_SAMPLE_RATE: 1.0
      SENTRY_PROFILES_SAMPLE_RATE: 1.0
      PLUGIN_REMOTE_INSTALL_HOST: localhost
      PLUGIN_REMOTE_INSTALL_PORT: 5003
      PLUGIN_MAX_PACKAGE_SIZE: 52428800
      INNER_API_KEY_FOR_PLUGIN: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
    depends_on:
      - db
      - redis
      - pgvector
    volumes:
      - ./storage:/app/api/storage
    networks:
      - dify-network

  # Worker Celery
  worker:
    image: langgenius/dify-api:1.7.1
    restart: unless-stopped
    environment:
      <<: *shared-api-worker-env
      MODE: worker
      SENTRY_DSN: ''
      SENTRY_TRACES_SAMPLE_RATE: 1.0
      SENTRY_PROFILES_SAMPLE_RATE: 1.0
      PLUGIN_MAX_PACKAGE_SIZE: 52428800
      INNER_API_KEY_FOR_PLUGIN: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
    depends_on:
      - db
      - redis
      - pgvector
    volumes:
      - ./storage:/app/api/storage
    networks:
      - dify-network

  # Planificateur de tâches
  worker_beat:
    image: langgenius/dify-api:1.7.1
    restart: unless-stopped
    environment:
      <<: *shared-api-worker-env
      MODE: beat
    depends_on:
      - db
      - redis
    networks:
      - dify-network

  # Interface Web
  web:
    image: langgenius/dify-web:1.7.1
    restart: unless-stopped
    environment:
      CONSOLE_API_URL: ''
      APP_API_URL: ''
      SENTRY_DSN: ''
      NEXT_TELEMETRY_DISABLED: 1
      TEXT_GENERATION_TIMEOUT_MS: 60000
      CSP_WHITELIST: ''
      ALLOW_EMBED: false
      ALLOW_UNSAFE_DATA_SCHEME: false
      MARKETPLACE_API_URL: https://marketplace.dify.ai
      MARKETPLACE_URL: https://marketplace.dify.ai
      TOP_K_MAX_VALUE: ''
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: ''
      PM2_INSTANCES: 2
      LOOP_NODE_MAX_COUNT: 100
      MAX_TOOLS_NUM: 10
      MAX_PARALLEL_LIMIT: 10
      MAX_ITERATIONS_NUM: 99
      ENABLE_WEBSITE_JINAREADER: true
      ENABLE_WEBSITE_FIRECRAWL: true
      ENABLE_WEBSITE_WATERCRAWL: true
    depends_on:
      - api
    networks:
      - dify-network

  # Base de données PostgreSQL principale
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: difyai123456
      POSTGRES_DB: dify
      PGDATA: /var/lib/postgresql/data/pgdata
    command: >
      postgres -c 'max_connections=100'
               -c 'shared_buffers=128MB'
               -c 'work_mem=4MB'
               -c 'maintenance_work_mem=64MB'
               -c 'effective_cache_size=4096MB'
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-h', 'db', '-U', 'postgres', '-d', 'dify']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dify-network

  # Cache Redis
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    environment:
      REDISCLI_AUTH: difyai123456
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --requirepass difyai123456
    healthcheck:
      test: ['CMD', 'redis-cli', '--no-auth-warning', '-a', 'difyai123456', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dify-network

  # Base de données vectorielle PostgreSQL avec pgvector
  pgvector:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: difyai123456
      POSTGRES_DB: dify
      PGDATA: /var/lib/postgresql/data/pgdata
      PG_BIGM: false
    volumes:
      - ./volumes/pgvector/data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dify-network

  # Sandbox pour l'exécution de code
  sandbox:
    image: langgenius/dify-sandbox:0.2.12
    restart: unless-stopped
    environment:
      API_KEY: dify-sandbox
      GIN_MODE: release
      WORKER_TIMEOUT: 15
      ENABLE_NETWORK: true
      HTTP_PROXY: http://ssrf_proxy:3128
      HTTPS_PROXY: http://ssrf_proxy:3128
      SANDBOX_PORT: 8194
      PIP_MIRROR_URL: ''
    volumes:
      - ./volumes/sandbox/dependencies:/dependencies
      - ./volumes/sandbox/conf:/conf
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8194/health']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dify-network
      - ssrf-network

  # Daemon pour les plugins
  plugin_daemon:
    image: langgenius/dify-plugin-daemon:0.2.0-local
    restart: unless-stopped
    environment:
      <<: *shared-api-worker-env
      DB_DATABASE: dify_plugin
      SERVER_PORT: 5002
      SERVER_KEY: lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
      MAX_PLUGIN_PACKAGE_SIZE: 52428800
      PPROF_ENABLED: false
      DIFY_INNER_API_URL: http://api:5001
      DIFY_INNER_API_KEY: QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
      PLUGIN_REMOTE_INSTALLING_HOST: 0.0.0.0
      PLUGIN_REMOTE_INSTALLING_PORT: 5003
      PLUGIN_WORKING_PATH: /app/storage/cwd
      FORCE_VERIFYING_SIGNATURE: true
      PYTHON_ENV_INIT_TIMEOUT: 120
      PLUGIN_MAX_EXECUTION_TIMEOUT: 600
      PIP_MIRROR_URL: ''
      PLUGIN_STORAGE_TYPE: local
      PLUGIN_STORAGE_LOCAL_ROOT: /app/storage
      PLUGIN_INSTALLED_PATH: plugin
      PLUGIN_PACKAGE_CACHE_PATH: plugin_packages
      PLUGIN_MEDIA_CACHE_PATH: assets
    ports:
      - "5003:5003"
    volumes:
      - ./volumes/plugin_daemon:/app/storage
    depends_on:
      - db
    networks:
      - dify-network

  # Proxy SSRF pour la sécurité
  ssrf_proxy:
    image: ubuntu/squid:latest
    restart: unless-stopped
    volumes:
      - ./ssrf_proxy/squid.conf:/etc/squid/squid.conf:ro
    environment:
      HTTP_PORT: 3128
      COREDUMP_DIR: /var/spool/squid
      REVERSE_PROXY_PORT: 8194
      SANDBOX_HOST: sandbox
      SANDBOX_PORT: 8194
    networks:
      - ssrf-network
      - dify-network

  # Nginx comme reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8880:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./volumes/certbot/conf/live:/etc/letsencrypt/live:ro
      - ./volumes/certbot/conf:/etc/letsencrypt:ro
      - ./volumes/certbot/www:/var/www/html:ro
    environment:
      NGINX_SERVER_NAME: _
      NGINX_HTTPS_ENABLED: false
      NGINX_SSL_PORT: 443
      NGINX_PORT: 80
      NGINX_SSL_CERT_FILENAME: dify.crt
      NGINX_SSL_CERT_KEY_FILENAME: dify.key
      NGINX_SSL_PROTOCOLS: "TLSv1.2 TLSv1.3"
      NGINX_WORKER_PROCESSES: auto
      NGINX_CLIENT_MAX_BODY_SIZE: 100M
      NGINX_KEEPALIVE_TIMEOUT: 65
      NGINX_PROXY_READ_TIMEOUT: 3600s
      NGINX_PROXY_SEND_TIMEOUT: 3600s
      NGINX_ENABLE_CERTBOT_CHALLENGE: false
    depends_on:
      - api
      - web
    networks:
      - dify-network

networks:
  dify-network:
    driver: bridge
  ssrf-network:
    driver: bridge
    internal: true

volumes:
  db_data:
  redis_data:
  pgvector_data:
  storage_data:
